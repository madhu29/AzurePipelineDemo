# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      name: agentpool123
    
    variables:
      dotnetSdkVersion: '5.x'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x' 
        force32bit: false # Optional
        checkLatest: false # Optional
    - task: Npm@1
      displayName: 'Restore Angular Dependencies'
      inputs:
        workingDir: 'ClientApp'
        verbose: false

    - task: Npm@1
      displayName: 'Build Angular'
      inputs:
        command: custom
        workingDir: 'ClientApp'
        verbose: false
        customCommand: 'run build'

    # - task: Npm@1
    #   displayName: 'Test UI'
    #   inputs:
    #     command: custom
    #     workingDir: 'ClientApp'
    #     verbose: false
    #     customCommand: 'run test'


    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.1.x
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop